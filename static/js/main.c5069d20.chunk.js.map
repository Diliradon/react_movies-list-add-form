{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","Servises/RandomDigits.ts","Servises/isValidUrl.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","isValidImgUrl","isValidImdbUrl","useState","Math","random","toFixed","slice","id","touched","setTouched","hasErrorBlur","hasEroorValid","htmlFor","type","classNames","event","target","onBlur","isValidUrl","url","test","valuesOfForm","NewMovie","onAdd","count","setCount","fieldsForm","setfieldsForm","handleChangeInputs","current","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5069d20.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getRandomDigits } from '../../Servises/RandomDigits';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string, name: string) => void,\n  isValidImgUrl?: boolean;\n  isValidImdbUrl?: boolean;\n};\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => { },\n  isValidImgUrl,\n  isValidImdbUrl,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasErrorBlur = touched && required && !value;\n  const hasEroorValid = (!isValidImgUrl || !isValidImdbUrl)\n    && required && touched;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasErrorBlur,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={(event) => {\n            onChange(event.target.value, name);\n          }}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasErrorBlur && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasEroorValid && value && (\n        <p className=\"help is-danger\">{`${label} isn't correct values`}</p>\n      )}\n    </div>\n  );\n};\n","export function getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n","export function isValidUrl(url: string) {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n}\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { isValidUrl } from '../../Servises/isValidUrl';\n\ntype Props = {\n  onAdd: (posts: Movie) => void\n};\n\nconst valuesOfForm = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [fieldsForm, setfieldsForm] = useState<Movie>(valuesOfForm);\n\n  const isValidImgUrl = isValidUrl(fieldsForm.imgUrl);\n  const isValidImdbUrl = isValidUrl(fieldsForm.imdbUrl);\n\n  const handleChangeInputs = (event: string, name: string) => {\n    setfieldsForm(current => ({ ...current, [name]: event }));\n  };\n\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd(fieldsForm);\n    setCount(current => current + 1);\n    setfieldsForm(valuesOfForm);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={submitForm}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={fieldsForm.title}\n        onChange={handleChangeInputs}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={fieldsForm.description}\n        onChange={handleChangeInputs}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={fieldsForm.imgUrl}\n        onChange={handleChangeInputs}\n        isValidImgUrl={isValidImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={fieldsForm.imdbUrl}\n        onChange={handleChangeInputs}\n        isValidImdbUrl={isValidImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={fieldsForm.imdbId}\n        onChange={handleChangeInputs}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={\n              !fieldsForm.title\n              || !fieldsForm.imgUrl\n              || !fieldsForm.imdbUrl\n              || !fieldsForm.imdbId\n            }\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}